<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AuthenticatingTxt" xml:space="preserve">
    <value>Authenticating</value>
  </data>
  <data name="AuthenticationErrorMsg" xml:space="preserve">
    <value>An unexpected error occurred while authenticating your license key.  Do you want to authenticate your license by sending  it to us via email or post instead?

Click "No" and then "Install" to try again.

Click "Yes" to save your license to a file.   Send this file to us and we will authenticate and return it, so that you can load it using the "Load License" button.

Error: {0}</value>
  </data>
  <data name="AuthenticationErrorTitle" xml:space="preserve">
    <value>Authentication Error</value>
  </data>
  <data name="AuthenticationsExceededMsg" xml:space="preserve">
    <value>The number of installations allowed for this license key has been exceeded.   </value>
  </data>
  <data name="ConfirmUninstallMsg" xml:space="preserve">
    <value>Are you sure you want to uninstall the current license?</value>
  </data>
  <data name="ConfirmUninstallTitle" xml:space="preserve">
    <value>Confirm License Uninstall</value>
  </data>
  <data name="ConnectionErrorMsg" xml:space="preserve">
    <value>Unable to connect to the License Authentication Server via the internet to authenticate your license on this computer. Do you want to authenticate your license by sending  it to us via email or post instead?

Click "No" to fix your internet or firewall settings and then click the "Install" button to try again.

Click "Yes" to save your license to a file.   Send this file to us and we will authenticate and return it, so that you can load it using the "Load License" button.</value>
  </data>
  <data name="EvaluationExpiredMsg" xml:space="preserve">
    <value>Your evaluation period has expired</value>
  </data>
  <data name="EvaluationInvalidMsg" xml:space="preserve">
    <value>Your evaluation is no longer valid</value>
  </data>
  <data name="InvalidAuthenticationKeyMsg" xml:space="preserve">
    <value>The key ({0}) is not a valid license key for this product.</value>
  </data>
  <data name="InvalidAuthenticationKeyTitle" xml:space="preserve">
    <value>Invalid License Key</value>
  </data>
  <data name="InvalidComputerMsg" xml:space="preserve">
    <value>The license is not valid for this computer.  This could be because you have changed the computer name since installing the license.

Licensed Computer: {0}
This Computer: {1}

You may need to install a new license using the original License Key provided to you when you purchased the product.  </value>
  </data>
  <data name="InvalidILSFile" xml:space="preserve">
    <value>Not a valid License Settings File</value>
  </data>
  <data name="InvalidKeyMsg" xml:space="preserve">
    <value>The key ({0}) is not a valid license key for this product.</value>
  </data>
  <data name="InvalidKeyTitle" xml:space="preserve">
    <value>Invalid License Key</value>
  </data>
  <data name="InvalidLicenseTitle" xml:space="preserve">
    <value>{0} - Invalid License</value>
  </data>
  <data name="InvalidProductMsg" xml:space="preserve">
    <value>The license is not a valid license for this product ({0}).  It is a license for another product ({1}).</value>
  </data>
  <data name="InvalidSignatureMsg" xml:space="preserve">
    <value>The license file contents have been modified and the license is no longer valid.  You may need to reinstall the license using the original License Key provided to you when you purchased the product.</value>
  </data>
  <data name="LicenseFile" xml:space="preserve">
    <value>License.lic</value>
  </data>
  <data name="LicenseFileFilter" xml:space="preserve">
    <value>License Files|*.lic</value>
  </data>
  <data name="LicenseInstalledTxt" xml:space="preserve">
    <value>License Installed</value>
  </data>
  <data name="LoadLicenseTitle" xml:space="preserve">
    <value>Load License from File</value>
  </data>
  <data name="NoLicenseInstalledTxt" xml:space="preserve">
    <value>No License Installed</value>
  </data>
  <data name="ReadErrorMsg" xml:space="preserve">
    <value>An error ({0}) occurred while reading the license from file ({1}).  

Ensure you have sufficient privileges to read from the license file.</value>
  </data>
  <data name="ReadErrorTitle" xml:space="preserve">
    <value>Error Reading License</value>
  </data>
  <data name="ReadXmlErrorMsg" xml:space="preserve">
    <value>An unexpected error ({0}) occurred while reading the license. </value>
  </data>
  <data name="SaveLicenseTitle" xml:space="preserve">
    <value>Save License to File</value>
  </data>
  <data name="UnauthenticatedLicenseMsg" xml:space="preserve">
    <value>The license has not been authenticated.</value>
  </data>
  <data name="UninstallErrorMsg" xml:space="preserve">
    <value>An error ({0}) occurred while deleting the license file ({1}).  

Ensure you have sufficient privileges to delete the license file.</value>
  </data>
  <data name="UninstallErrorTitle" xml:space="preserve">
    <value>Error Uninstalling License</value>
  </data>
  <data name="UnknownProductTxt" xml:space="preserve">
    <value>Unknown Product</value>
  </data>
  <data name="WaitTxt" xml:space="preserve">
    <value>Please Wait...</value>
  </data>
  <data name="WriteErrorMsg" xml:space="preserve">
    <value>An error ({0}) occurred while writing the license to file ({1}).  

Ensure you have sufficient privileges to write to the license file.</value>
  </data>
  <data name="WriteErrorTitle" xml:space="preserve">
    <value>Error Writing License</value>
  </data>
</root>